- hosts:
  - mfdp.local
  become: false
  gather_facts: false
  collections: sviridov.dataprotector

  vars:
    test_user_1:
      webusername: "win_user|*|client.company.com"
      name: win_user
      dp_group: admin
      os_group: '*'
      client: client.company.com
      password: OMNIomni11_
      description: "My test win user"
    test_user_2:
      webusername: "unix_user|unix_user_grp|server.company.com"
      name: unix_user
      dp_group: user
      os_group: unix_user_grp
      client: server.company.com

  tasks:

    - name: 0 - Gather user facts
      mfdp_facts:
        gather_subset: users

    - name: 0 - Purge user win_user
      ansible.builtin.command: '/opt/omni/bin/omniusers -remove -name {{ test_user_1["webusername"] }}'
      when: 'test_user_1["webusername"] in ansible_facts["dataprotector_users"].keys()'

    - name: 0 - Purge user unix_user
      ansible.builtin.command: '/opt/omni/bin/omniusers -remove -name {{ test_user_2["webusername"] }}'
      when: 'test_user_2["webusername"] in ansible_facts["dataprotector_users"].keys()'

    - name: 0 - Assert that root DP user is present
      assert:
        that: '"root|*|{{ ansible_host }}" in ansible_facts["dataprotector_users"].keys()'

    - name: 1.1 - Add user
      mfdp_users:
        name: '{{ test_user_1["name"] }}'
        dp_group: '{{ test_user_1["dp_group"] }}'
        os_group: '{{ test_user_1["os_group"] }}'
        client: '{{ test_user_1["client"] }}'
        password: '{{ test_user_1["password"] }}'
        description: '{{ test_user_1["description"] }}'
      register: user_added

    - name: 1.1 - Assert that module result is changed
      assert:
        that: user_added is changed

    - name: 1.1 - Add user again
      mfdp_users:
        name: '{{ test_user_1["name"] }}'
        dp_group: '{{ test_user_1["dp_group"] }}'
        os_group: '{{ test_user_1["os_group"] }}'
        client: '{{ test_user_1["client"] }}'
        description: '{{ test_user_1["description"] }}'
      register: user_added

    - name: 1.1 - Assert that module result is not changed
      assert:
        that: user_added is not changed

    - name: 1.1 - Add user again (webusername)
      mfdp_users:
        webusername: '{{ test_user_1["webusername"] }}'
        dp_group: '{{ test_user_1["dp_group"] }}'
        description: '{{ test_user_1["description"] }}'
      register: user_added

    - name: 1.1 - Assert that module result is not changed
      assert:
        that: user_added is not changed

    - name: 1.2 - Add user by webusername
      mfdp_users:
        webusername: '{{ test_user_2["webusername"] }}'
        dp_group: '{{ test_user_2["dp_group"] }}'
      register: user_added

    - name: 1.2 - Assert that module result is changed
      assert:
        that: user_added is changed

    - name: 1.2 - Add user again
      mfdp_users:
        name: '{{ test_user_2["name"] }}'
        dp_group: '{{ test_user_2["dp_group"] }}'
        os_group: '{{ test_user_2["os_group"] }}'
        client: '{{ test_user_2["client"] }}'
      register: user_added

    - name: 1.2 - Assert that module result is not changed
      assert:
        that: user_added is not changed

    - name: 1.3 - Gather user facts again
      mfdp_facts:
        gather_subset: users

    - name: 1.3 - Assert that added users are present
      assert:
        that:
          - 'test_user_1["webusername"] in ansible_facts["dataprotector_users"].keys()'
          - 'test_user_2["webusername"] in ansible_facts["dataprotector_users"].keys()'

    - name: 1.3 - Assert that added users are correct
      assert:
        that:
          - 'ansible_facts["dataprotector_users"][test_user_1["webusername"]]["name"] == test_user_1["name"]'
          - 'ansible_facts["dataprotector_users"][test_user_1["webusername"]]["dp_group"] == test_user_1["dp_group"]'
          - 'ansible_facts["dataprotector_users"][test_user_1["webusername"]]["os_group"] == test_user_1["os_group"]'
          - 'ansible_facts["dataprotector_users"][test_user_1["webusername"]]["client"] == test_user_1["client"]'
          - 'ansible_facts["dataprotector_users"][test_user_1["webusername"]]["description"] == test_user_1["description"]'
          - 'ansible_facts["dataprotector_users"][test_user_2["webusername"]]["name"] == test_user_2["name"]'
          - 'ansible_facts["dataprotector_users"][test_user_2["webusername"]]["dp_group"] == test_user_2["dp_group"]'
          - 'ansible_facts["dataprotector_users"][test_user_2["webusername"]]["os_group"] == test_user_2["os_group"]'
          - 'ansible_facts["dataprotector_users"][test_user_2["webusername"]]["client"] == test_user_2["client"]'
          - 'ansible_facts["dataprotector_users"][test_user_2["webusername"]]["description"] == ""'